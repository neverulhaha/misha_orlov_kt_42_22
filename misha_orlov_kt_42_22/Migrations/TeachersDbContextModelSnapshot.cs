// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using misha_orlov_kt_42_22.Database;

#nullable disable

namespace misha_orlov_kt_42_22.Migrations
{
    [DbContext(typeof(TeachersDbContext))]
    partial class TeachersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("misha_orlov_kt_42_22.Models.AcademicDegree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DegreeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DegreeName")
                        .IsUnique();

                    b.ToTable("AcademicDegrees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DegreeName = "Доктор наук"
                        },
                        new
                        {
                            Id = 2,
                            DegreeName = "Кандидат наук"
                        });
                });

            modelBuilder.Entity("misha_orlov_kt_42_22.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FoundationDate")
                        .HasColumnType("date");

                    b.Property<int?>("HeadId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("HeadId")
                        .IsUnique()
                        .HasFilter("[HeadId] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Departments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FoundationDate = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Кафедра информатики"
                        },
                        new
                        {
                            Id = 2,
                            FoundationDate = new DateTime(2005, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Кафедра математики"
                        },
                        new
                        {
                            Id = 3,
                            FoundationDate = new DateTime(2010, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Кафедра физики"
                        });
                });

            modelBuilder.Entity("misha_orlov_kt_42_22.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Positions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PositionName = "Профессор"
                        },
                        new
                        {
                            Id = 2,
                            PositionName = "Доцент"
                        },
                        new
                        {
                            Id = 3,
                            PositionName = "Ассистент"
                        });
                });

            modelBuilder.Entity("misha_orlov_kt_42_22.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Subjects", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Программирование"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Алгебра"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Физика"
                        });
                });

            modelBuilder.Entity("misha_orlov_kt_42_22.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DegreeId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DegreeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.ToTable("Teachers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DegreeId = 1,
                            DepartmentId = 1,
                            Name = "Иван",
                            Patronymic = "Иванович",
                            PositionId = 1,
                            Surname = "Иванов"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Пётр",
                            Patronymic = "Петрович",
                            Surname = "Петров"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Сидор",
                            Patronymic = "Сидорович",
                            Surname = "Сидоров"
                        });
                });

            modelBuilder.Entity("misha_orlov_kt_42_22.Models.Workload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Hours")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId", "SubjectId")
                        .IsUnique()
                        .HasFilter("[TeacherId] IS NOT NULL AND [SubjectId] IS NOT NULL");

                    b.ToTable("Workloads", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Hours = 40,
                            SubjectId = 1,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            Hours = 30,
                            SubjectId = 2,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            Hours = 20,
                            SubjectId = 3,
                            TeacherId = 3
                        });
                });

            modelBuilder.Entity("misha_orlov_kt_42_22.Models.Department", b =>
                {
                    b.HasOne("misha_orlov_kt_42_22.Models.Teacher", "Head")
                        .WithOne()
                        .HasForeignKey("misha_orlov_kt_42_22.Models.Department", "HeadId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Head");
                });

            modelBuilder.Entity("misha_orlov_kt_42_22.Models.Teacher", b =>
                {
                    b.HasOne("misha_orlov_kt_42_22.Models.AcademicDegree", "Degree")
                        .WithMany("Teachers")
                        .HasForeignKey("DegreeId");

                    b.HasOne("misha_orlov_kt_42_22.Models.Department", "Department")
                        .WithMany("Teachers")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("misha_orlov_kt_42_22.Models.Position", "Position")
                        .WithMany("Teachers")
                        .HasForeignKey("PositionId");

                    b.Navigation("Degree");

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("misha_orlov_kt_42_22.Models.Workload", b =>
                {
                    b.HasOne("misha_orlov_kt_42_22.Models.Subject", "Subject")
                        .WithMany("Workloads")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("misha_orlov_kt_42_22.Models.Teacher", "Teacher")
                        .WithMany("Workloads")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("misha_orlov_kt_42_22.Models.AcademicDegree", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("misha_orlov_kt_42_22.Models.Department", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("misha_orlov_kt_42_22.Models.Position", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("misha_orlov_kt_42_22.Models.Subject", b =>
                {
                    b.Navigation("Workloads");
                });

            modelBuilder.Entity("misha_orlov_kt_42_22.Models.Teacher", b =>
                {
                    b.Navigation("Workloads");
                });
#pragma warning restore 612, 618
        }
    }
}
